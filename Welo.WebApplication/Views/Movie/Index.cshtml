@model PagedList.IPagedList<Welo.WebApplication.ViewModels.MovieViewModel>
@using PagedList.Mvc;
@using Welo.WebApplication.Helper;

@Styles.Render("~/Content/pagination")

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLinkFor(model => model.Name, "Index", new { sortOrder = "desc" })
        </th>
        <th>
            @Html.ActionLinkFor(model => model.Year, "Index", new { sortOrder = "desc" })
        </th>
        <th>
            @Html.ActionLinkFor(model => model.Genre, "Index", new { sortOrder = "desc" })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))